{{ 'quick-order.css' | asset_url | stylesheet_tag }}  
<div id="primary" class="content-area">
  {%- include 'page-header' -%}
  <div id="content" class="site-content">
    <article class="page">
      <div class="row">
        <div class="large-12 columns">
          <div class="entry-content">
            {%- include 'shortcode' load: page.content -%}
          </div>  
    </div>
   </div>       
{% assign collHandle = 'quick-order' %}             
{% assign collection = collections[collHandle] %}   
{% assign count = 0 %}
{% assign total = cart.attributes.pagination %}
{% assign searchTag = cart.attributes.tag %}
{% assign totalLineItem = 0 %}
{% comment %}
Source: https://gist.github.com/carolineschnapp/9122054
{% endcomment %}
 {% for item in cart.items %}
     {% assign totalLineItem = totalLineItem | plus: 1 %}      
  {% endfor %}   
  {% include 'alertMessageLineItem' %}
<div class="paginationForm">
{% paginate collection.products by total %}
<form action="/cart" method="post" class="orderForm">
  <div class="row">
    <div class="large-12 columns" style="text-align: left">
      
      {% if collection.products_count > 0 %}

      
<!--        <h1>{% if template contains 'page' %}{{ page.title }}{% else %}{{ collection.title }}{% endif %}</h1>
      {% endif %} -->
     
      {% if template contains 'page' and page.content.size > 0 %}
       
      {% elsif collection.description.size > 0 %}
        <div class="rte">
          {{ collection.description }}
        </div>
      {% endif %}
      
    
      {% if collection.products_count > 0 %}
      
        <div class="filterBoxWrap">
            <div class="filterBox fBox" data-enable-listfilter="true" data-listfilter-list="#prodList" data-listfilter-by-attribute="data-name">
                <label>Search</label>
                <input type="search" class="form-control" placeholder="Search Product">
            </div>
            <div class="fBox cat">
                <label>Category</label>
                <select class="catFilter">
					
                  	 <option selected value></option>
                      <option value="Accessories">Accessories</option>
                      <option value="Sweetlegs One Size">SweetLegs one size</option>
                      <option value="Sweetlegs Plus">SweetLegs Plus</option>
                      <option value="Sweetlegs Petite">SweetLegs Petite</option>
                      <option value="Sweetlegs Kids">SweetLegs Kids</option>
                      <option value="Marketing Materials">Marketing Materials</option>
                  	  <option value="ID Only Prints">ID Only Prints</option>
                  	  <option value="C1">Clearance 60% off</option>
                      <option value="C2">Clearance 70% off</option>
                  	  <option value="C3">Clearance 80% off</option>
                  	  <option value="C4">Clearance 85% off</option>
               </select>
            </div>
            <div class="fBox subs">
                <label>&nbsp;</label>
                <input value="Show All Products" type="button" class="clearMe">
            </div>
        </div>


    	<input class="totalLineItem" data-total={{totalLineItem}} type=hidden />
      

        <table>
          <thead>
            <tr>
              <th colspan="2">Product</th>
              <th>Price</th>
              <th>Quantity</th>
            </tr>  
          </thead>  
          
          <tbody id="prodList">
         
          {% for product in collection.products %}
            {% if product.available%}
            {% if searchTag contains 'all' %}
            {% include 'quickorder' %}
            {% else  %}
            {% for tag in product.tags %}
                {% assign tagDowncase = tag | downcase %}  
				{% if tagDowncase contains searchTag %}				                                     
             {% include 'quickorder' %}
              {% endif %}
			{% endfor %}
            {% endif %}
            {% endif %}
          {% endfor %}
          </tbody>
        </table>
      {% include 'pagination' %}
        <p class="zeroResults hideMe">No Products Found</p>
        <div class="orderSubmit dummyOrder">          
        </div>  
  
    </div><!-- row -->
    </div><!-- large-12 columns -->
  
    <div class="orderSubmit realOrderSubmit  orderSubmitFloat">
      <div class="row">
        <div class="large-12 columns">  
          <input type="submit" value="Continue to Checkout" />
          {% comment %}<a class="submitCheckout" href="/checkout">Checkout</a> {% endcomment %}
        </div>
      </div>
    </div>
 
  
  {% else %}
    <p>There are no products in this view.</p>
  {% endif %}

</form>

{% endpaginate %}
      </div><!--paginationForm-->

{% if collection.products_count > 0 %}

<script type="text/javascript">
/**
 * JQuery ListFilter plugin
 *
 * Filters a HTML list (defined as <element data-listfilter-list="ul#some-list">)
 *
 * Usage:
 *   $('form').listFilter();
 *
 * The list items can be filtered by an attribute:
 *   <element data-listfilter-by-attribute="true"> ("data-listfilter-index" as default)
 *   <element data-listfilter-by-attribute="data-title">
 *
 * Note: index value in data attribute should be lowecased.
 *
 * or by children element:
 *   <element data-listfilter-by-element="h3:contains({{value}})">
 *
 * Note: by-attribute method is much faster than byElement, because of CSS3 native selector usage
 *
 *
 * @version 0.2
 * @since 2014-01
 * @author Mateusz Janik
 *
 */
!function(t){var e="listfilter";!function(t){var n="listFilter";t.fn[n]=function(i){var a=t.extend({},t.fn[n].defaults,i);return this.each(function(){function n(n){if(o)if(""===n.val())r.removeClass(e+"-item--hidden");else{var i=o.replace("{{value}}",n.val()),a=r.removeClass(e+"-item--hidden").filter(function(){return t(this).find(i).length>0});r.not(a).addClass(e+"-item--hidden")}else u&&(""===n.val()?c.html(""):c.html("#"+h+" > "+f+":not(["+u+'*="'+n.val().toLowerCase()+'"]) { display: none; }'))}var i=t(this),l=i.find("input[type=search]"),s=i.find("button"),d=t(i.data(e+"List")),r=d.children().addClass("listfilter-item"),f=i.data(e+"ListItem")||"",o=i.data(e+"ByElement"),u=i.data(e+"ByAttribute");if(u){var h=d[0].id;if(!h)return!1;var c=t('<style type="text/css" id="listfilter-style-'+Math.round((new Date).getTime()+100*Math.random())+'"></style>').appendTo("head");u="string"==typeof u?u:"data-"+e+"-index"}s.length?s.on("click",function(){n(l)}):l.on(a.eventType,function(){n(l)}).on("search",function(){""===l.val()&&n(l)})}),this},t.fn[n].defaults={eventType:"keyup"}}(jQuery)}(window);

$('.filterBox input').val('');

$('.filterBox').listFilter({
        // eventType: 'change'
  }); 

jQuery(function($) {
 
  $('[max]').change(function() {
    var max = parseInt($(this).attr('max'), 10);
    var value = parseInt($(this).val(), 10) || 0;
    if (value > max) { 
      alert('We only have ' + max + ' of this item in stock');
      $(this).val(max); 
    }    
  });
});
  
var xv = 1;
  
$(document).ready(function() {

  
  $('.quantity.field').keydown(function(e) {
          // Allow: backspace, delete, tab, escape, enter and .
    if ($.inArray(e.keyCode, [46, 8, 9, 27, 110, 190]) !== -1 ||
      // Allow: Ctrl+A
      (e.keyCode == 65 && e.ctrlKey === true) ||
      // Allow: home, end, left, right
      (e.keyCode >= 35 && e.keyCode <= 39)) {
      // let it happen, don't do anything
      return;
    }
    // Ensure that it is a number and stop the keypress
    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
      e.preventDefault();
    }
  });
  
  
  $('.orderForm').submit(function() {
    $(this).find('.quantity.field').each(function() {
     var xname = $(this).attr('data-name'); 
     if ($(this).val() > 0) {
       $(this).attr('name', xname); 
     } else {
       $(this).attr('name', '');  
     }
    }); 
    $(this).submit();
    
    return false;
  });  
  
  
  
  $.fn.isInViewport = function() {
    var elementTop = $(this).offset().top + 78;
    var elementBottom = elementTop + $(this).outerHeight();
    
    var viewportTop = $(window).scrollTop();
    var viewportBottom = viewportTop + $(window).height();
    
    return elementBottom > viewportTop && elementTop < viewportBottom;
  };
  
  
    floatMe();
  
  
  $(window).on('resize scroll', function() {
    
    floatMe();
  
    // console.log('resize scroll');
  });
  
  
  

  var xv = 1;
  var xt;
  $('#prodList tr').each(function() {
    $(this).attr('data-tag', $(this).attr('data-tag').toLowerCase());
  });
 
  $('.catFilter').change(function() {
    
    var urlWithParamas = window.location.href;
    var url = urlWithParamas.split('?')[0];
    var cv = $(this).val().toLowerCase();
      
    
    
  	var totalSearch = $('#prodList tr[data-tag*="'+cv+'"]').length;
    
    
     $.ajax({
      type: "POST",
      url: '/cart.js',
      data: {"attributes[pagination]": 500, "attributes[tag]": cv}, /* We are using an attribute named "pagination" */
      success: function(d){
        /* 

        On sucess, reload the page.  

        Warning: If you have scripts on the page that auto trigger the change even the page may reload forever.
        If you do, be sure to add code to account for that.

        */
        console.log(d.attributes.tag);
        location.href = `${url}?searchCatagory=${cv}`;
      },
      dataType: 'json'
  });    
  });
  
  
  $('.filterBox .form-control').keyup(function() {
    clearTimeout(xt);
    xt = setTimeout(function(){ 
      xv = $('#prodList tr:visible').size();
      if (xv == 0) {
        $('.zeroResults').removeClass('hideMe');
      } else {
        $('.zeroResults').addClass('hideMe')
      }
      
      floatMe();
      
    }, 10);        
  });

    $('.clearMe').click(function() {
   	var url = window.location.href;
     $.ajax({
    type: "POST",
    url: '/cart.js',
    data: {"attributes[pagination]": 50, "attributes[tag]": "all"}, /* We are using an attribute named "pagination" */
    success: function(d){
      /* 

      On sucess, reload the page.  

      Warning: If you have scripts on the page that auto trigger the change even the page may reload forever.
      If you do, be sure to add code to account for that.

      */
       if(!url.includes('reload')){
          window.location.replace(window.location.href+'?reload');
        }
      },
      dataType: 'json'
    });


   
  });
   
// end ready  
});  
  
function floatMe() {
  if ($('.dummyOrder').isInViewport()) {    
        $('.realOrderSubmit ').removeClass('orderSubmitFloat');
      } else {
        if ($('#shopify-section-footer').isInViewport()) {
          $('.realOrderSubmit ').removeClass('orderSubmitFloat');
        } else {
            $('.realOrderSubmit ').addClass('orderSubmitFloat');
        }
        
        if ($('#prodList').isInViewport()) {
          $('.realOrderSubmit ').addClass('orderSubmitFloat');
        } else {
            $('.realOrderSubmit ').removeClass('orderSubmitFloat');
        }
        
      }
}  

$(document).ready(function(){
  $('.closeModal').on('click',function(){
    $('.popUpModal').fadeOut();
  });
 var url = window.location.href;
  if(url.split('=')[1] != undefined) {
   var cv = url.split('=')[1].replace(/%20/g," ");
   var search = cv.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
  } 
   $.ajax({
    type: "POST",
    url: '/cart.js',
    success: function(d){
      console.log(d);
       if(d.attributes.tag != 'all'){
           if(!url.includes('searchCatagory')){       
             $.ajax({
            type: "POST",
            url: '/cart.js',
            data: {"attributes[pagination]": 50, "attributes[tag]": "all"}, /* We are using an attribute named "pagination" */
            success: function(d){
              /* 

              On sucess, reload the page.  

              Warning: If you have scripts on the page that auto trigger the change even the page may reload forever.
              If you do, be sure to add code to account for that.

              */
               if(!url.includes('reload')){
                 window.location.replace(window.location.href+'?reload');
                }
              },
              dataType: 'json'
            });
          } else {
            $('.catFilter').val(search);
          }
        }
      },
      dataType: 'json'
    });
 


 $('.quantity.field').change(function(){ 
   var check = true;
    var prev = this.defaultValue;
    var initialCartValue = parseInt($('.cart_items_number.counter_number.animated.rubberBand').text());
    var $id = $(this).parent().find('input.variantId').val();
   	var $url = $(this).parent().find('input.variantUrl').val();
    var $qty = $(this).parent().find('.quantity.field');
    var initialLineItemValue = parseInt($qty.data('info'));
    var totalLine = parseInt($('.totalLineItem').data('total')); 
   	if(parseInt($qty.val()) == 0 ) {
    $('.totalLineItem').data('total', parseInt($('.totalLineItem').data('total')) - 1);
   }
   	
   if(prev == 0 && initialLineItemValue == 0 && parseInt($qty.val()) != 0 ) {
    $('.totalLineItem').data('total', parseInt($('.totalLineItem').data('total')) + 1);
   }
   if(totalLine > 5 ) {
      $qty.val('0');
     $('.popUpModal').fadeIn();
     $('.totalLineItem').data('total', parseInt($('.totalLineItem').data('total')) - 1);
    
   }
    var currentVal = parseInt($qty.val());
    if (!isNaN(currentVal)) {
        $qty.val(currentVal);
    }
    console.log('current value' + currentVal + 'cart value' + initialCartValue + 'prev' + prev);
    if (prev != 0 && initialLineItemValue == 0 ){
    var updateValue = initialCartValue + (currentVal - prev);
    } else {
      var updateValue = initialCartValue + (currentVal - initialLineItemValue);
    }
    $qty.data('info', currentVal);
    
    $('.cart_items_number.counter_number.animated.rubberBand').text(updateValue);

    $.ajax({
        type: 'GET',
        url: `${$url}`,
        cache: false,
        dataType: 'json',
        success: function(cart) {
          var tags = cart.product.tags.split(','); 
          tags.forEach(tag => {
            console.log(currentVal);
            if (tag.trim() == "black" && currentVal > 10) {
              alert("You can choose only 10 items from this product");
              $qty.val(10).trigger('change');
			  var quantity = 10;
              check = false;
              addToCart(quantity);
            } else if (tag.trim() == 'limit2' && currentVal > 15) {
             	alert("You can choose only 15 items from this product");
                $qty.val(15).trigger('change');
              	check = false;
				var quantity = 15;
              	addToCart(quantity);
            } else if (tag.trim() == 'limit3' && currentVal > 20) {
              alert("You can choose only 20 items from this product");
              $qty.val(20).trigger('change');
				var quantity = 20;
              	check = false;
              	addToCart(quantity);
            } 
          });
          if(check) {
              addToCart(currentVal);
          }
        
        }
    });
   
   function addToCart(qty) {
     console.log('qty'+qty);
      var data = {
    	quantity: qty,
    	id: $id
    }
    if(prev != 0 || initialLineItemValue != 0) {    
      jQuery.ajax({
      type: 'post',
      url: '/cart/change.js',
      data: data,
      success: function(d){console.log(d)},
      dataType: 'json'
    });
    } else {
    jQuery.ajax({
      type: 'post',
      url: '/cart/add.js',
      data: data,
      success: function(d){console.log(d)},
      dataType: 'json'
    });
    }
   }
  });
   $('.prodListPlus').on('click',function(){
      var initialCartValue = parseInt($('.cart_items_number.counter_number.animated.rubberBand').text());
      var $qty = $(this).parent().find('.quantity.field');
      var currentVal = parseInt($qty.val());
      if (!isNaN(currentVal)) {
          $qty.val(currentVal + 1).trigger('change');
      }
    $('.cart_items_number.counter_number.animated.rubberBand').text(initialCartValue + 1);
  });
  $('.prodListMinus').on('click',function(){
     var initialCartValue = parseInt($('.cart_items_number.counter_number.animated.rubberBand').text());
     var $id = $(this).parent().find('input.variantId').val();
      var $qty = $(this).parent().find('.quantity.field');
      var currentVal = parseInt($qty.val());
      if (currentVal > 0 ) {
          $qty.val(currentVal - 1).trigger('change');
       $('.cart_items_number.counter_number.animated.rubberBand').text(initialCartValue - 1);
      }        
 
  });

})
  
  
</script>
                    
{% endif %}            
    </article>
  </div>
</div>